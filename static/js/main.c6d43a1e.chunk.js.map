{"version":3,"sources":["img sync /^/.//.*/.svg$","img/ANA.svg","img/ARI.svg","img/BOS.svg","img/BUF.svg","img/CAR.svg","img/CBJ.svg","img/CGY.svg","img/CHI.svg","img/COL.svg","img/DAL.svg","img/DET.svg","img/EDM.svg","img/FLA.svg","img/LAK.svg","img/MIN.svg","img/MTL.svg","img/NJD.svg","img/NSH.svg","img/NYI.svg","img/NYR.svg","img/OTT.svg","img/PHI.svg","img/PIT.svg","img/SJS.svg","img/STL.svg","img/TBL.svg","img/TOR.svg","img/VAN.svg","img/VGK.svg","img/WPG.svg","img/WSH.svg","components/Teams.js","components/PlayerStats.js","components/TeamOverview.js","components/TeamRoster.js","components/TeamStats.js","components/StandingsTable.js","components/Standings.js","App.js","registerServiceWorker.js","index.js"],"names":["map","./ANA.svg","./ARI.svg","./BOS.svg","./BUF.svg","./CAR.svg","./CBJ.svg","./CGY.svg","./CHI.svg","./COL.svg","./DAL.svg","./DET.svg","./EDM.svg","./FLA.svg","./LAK.svg","./MIN.svg","./MTL.svg","./NJD.svg","./NSH.svg","./NYI.svg","./NYR.svg","./OTT.svg","./PHI.svg","./PIT.svg","./SJS.svg","./STL.svg","./TBL.svg","./TOR.svg","./VAN.svg","./VGK.svg","./WPG.svg","./WSH.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Teams","dropdownOptions","this","props","react_default","a","createElement","className","react_select_browser_esm","placeholder","onChange","handleTeam","options","react_router_dom","to","Component","PlayerStats","player","playerInfo","playerStats","key","fullName","birthCity","birthStateProvince","birthCountry","birthDate","height","weight","primaryPosition","games","gamesStarted","wins","losses","ot","shotsAgainst","goalsAgainst","goalAgainstAverage","savePercentage","shutouts","timeOnIce","goals","assists","points","plusMinus","pim","powerPlayGoals","powerPlayPoints","shortHandedGoals","shortHandedPoints","gameWinningGoals","overTimeGoals","shots","shotPct","faceOffPct","timeOnIcePerGame","evenTimeOnIcePerGame","shortHandedTimeOnIcePerGame","powerPlayTimeOnIcePerGame","TeamOverview","state","error","team","stats","teamStats","splits","stat","name","venue","city","conference","division","powerPlayPercentage","penaltyKillPercentage","faceOffWinPercentage","gamesPlayed","pts","goalsAgainstPerGame","goalsPerGame","shotsPerGame","shootingPctg","shotsAllowed","powerPlayOpportunities","savePctg","TeamRoster","_this","roster","colSpan","person","selectedPlayer","onClick","handlePlayer","jerseyNumber","position","abbreviation","TeamStats","change","playerid","setState","pullPlayerInfo","pullPlayerStats","history","push","_this2","teams","sort","by","desc","t","type","asc","n","substring","indexOf","count","forEach","i","shift","src","require","concat","alt","components_TeamRoster","windowWidth","react_router","path","render","components_PlayerStats","exact","components_TeamOverview","withRouter","StandingsTable","standings","currentTeam","leagueRecord","row","goalsScored","streak","streakCode","Standings","components_StandingsTable","metro","atlantic","easternWildCard","central","pacific","westernWildCard","App","componentDidMount","pullTeams","pullStandings","fetch","then","response","json","data","newTeams","length","value","label","image","avatar","catch","err","console","log","records","teamRecords","wildCardRank","divisionRank","forceUpdate","people","filterTeams","filter","fteam","selectedTeam","components_Teams","components_TeamStats","match","params","components_Standings","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","basename","process","src_App_0","document","getElementById","URL","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c6d43a1e.chunk.js","sourcesContent":["var map = {\n\t\"./ANA.svg\": 43,\n\t\"./ARI.svg\": 44,\n\t\"./BOS.svg\": 45,\n\t\"./BUF.svg\": 46,\n\t\"./CAR.svg\": 47,\n\t\"./CBJ.svg\": 48,\n\t\"./CGY.svg\": 49,\n\t\"./CHI.svg\": 50,\n\t\"./COL.svg\": 51,\n\t\"./DAL.svg\": 52,\n\t\"./DET.svg\": 53,\n\t\"./EDM.svg\": 54,\n\t\"./FLA.svg\": 55,\n\t\"./LAK.svg\": 56,\n\t\"./MIN.svg\": 57,\n\t\"./MTL.svg\": 58,\n\t\"./NJD.svg\": 59,\n\t\"./NSH.svg\": 60,\n\t\"./NYI.svg\": 61,\n\t\"./NYR.svg\": 62,\n\t\"./OTT.svg\": 63,\n\t\"./PHI.svg\": 64,\n\t\"./PIT.svg\": 65,\n\t\"./SJS.svg\": 66,\n\t\"./STL.svg\": 67,\n\t\"./TBL.svg\": 68,\n\t\"./TOR.svg\": 69,\n\t\"./VAN.svg\": 70,\n\t\"./VGK.svg\": 71,\n\t\"./WPG.svg\": 72,\n\t\"./WSH.svg\": 73\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","module.exports = __webpack_public_path__ + \"static/media/ANA.9bc562de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ARI.8f690ed8.svg\";","module.exports = __webpack_public_path__ + \"static/media/BOS.68807e3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/BUF.34bd4af7.svg\";","module.exports = __webpack_public_path__ + \"static/media/CAR.ca9445d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/CBJ.616a5939.svg\";","module.exports = __webpack_public_path__ + \"static/media/CGY.c86950f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/CHI.957756b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/COL.494be10f.svg\";","module.exports = __webpack_public_path__ + \"static/media/DAL.cfdb9c45.svg\";","module.exports = __webpack_public_path__ + \"static/media/DET.efabe2d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/EDM.a06389fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/FLA.2cf605d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/LAK.52edb823.svg\";","module.exports = __webpack_public_path__ + \"static/media/MIN.592cb8ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/MTL.86f58a6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/NJD.9a2e7716.svg\";","module.exports = __webpack_public_path__ + \"static/media/NSH.3aa53cb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/NYI.f384bd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/NYR.784721fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/OTT.c8eee809.svg\";","module.exports = __webpack_public_path__ + \"static/media/PHI.3c22873a.svg\";","module.exports = __webpack_public_path__ + \"static/media/PIT.1efe47ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/SJS.1265334c.svg\";","module.exports = __webpack_public_path__ + \"static/media/STL.14ac936f.svg\";","module.exports = __webpack_public_path__ + \"static/media/TBL.7f35b009.svg\";","module.exports = __webpack_public_path__ + \"static/media/TOR.20b99b88.svg\";","module.exports = __webpack_public_path__ + \"static/media/VAN.be932ad3.svg\";","module.exports = __webpack_public_path__ + \"static/media/VGK.08ecefc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/WPG.eae9751f.svg\";","module.exports = __webpack_public_path__ + \"static/media/WSH.95b22f49.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport '../App.css';\n\nclass Teams extends Component {\n    render() {\n        const dropdownOptions = this.props.dropdownOptions;\n        return (\n            <div className=\"teams\">\n                <div className=\"team-selector\">\n                    <Select\n                        placeholder=\"Select a team..\"\n                        onChange={this.props.handleTeam}\n                        options={dropdownOptions}\n                    />\n                </div>\n                <div className=\"menu-container\">\n                    <span className=\"nav-title-link\"><Link to=\"/\">Standings</Link></span>   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Teams;","import React, { Component } from 'react';\nimport '../App.js';\n\nclass PlayerStats extends Component {\n    render() {\n        const player = this.props.playerInfo;\n        const playerStats = this.props.playerStats;\n        return (\n            <div className=\"player-info\" key={player.id}>\n                {player.id && (\n                    <div className=\"player-inner\">\n                        <div className=\"info\">\n                            <h3>{player.fullName}</h3>\n                            <ul>\n                                <li>{player.birthCity}, {player.birthStateProvince}, {player.birthCountry}</li>\n                                <li>Born: {player.birthDate}</li>\n                                <li>{player.height}</li>\n                                <li>{player.weight} lbs</li>\n                            </ul>\n                        </div>\n                        {player.primaryPosition.code === 'G' ? (\n                            <div className=\"player-stats\">\n                                <table>\n                                    <tbody>\n                                        <tr>\n                                            <td>Games Played</td>\n                                            <td>{playerStats.games}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Games Started</td>\n                                            <td>{playerStats.gamesStarted}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Wins</td>\n                                            <td>{playerStats.wins}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Losses</td>\n                                            <td>{playerStats.losses}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Overtime Losses:</td>\n                                            <td>{playerStats.ot}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Shots Against</td>\n                                            <td>{playerStats.shotsAgainst}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Goals Against</td>\n                                            <td>{playerStats.goalsAgainst}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>GAA</td>\n                                            <td>{playerStats.goalAgainstAverage}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Save %</td>\n                                            <td>{playerStats.savePercentage}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Shutouts</td>\n                                            <td>{playerStats.shutouts}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Minutes Played</td>\n                                            <td>{playerStats.timeOnIce}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                        </div>\n                        ) : (\n                        <div className=\"player-stats\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>Games Played</td>\n                                        <td>{playerStats.games}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Goals</td>\n                                        <td>{playerStats.goals}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Assists</td>\n                                        <td>{playerStats.assists}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Points</td>\n                                        <td>{playerStats.points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>+/-</td>\n                                        <td>{playerStats.plusMinus}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>PIM</td>\n                                        <td>{playerStats.pim}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>PowerPlay Goals</td>\n                                        <td>{playerStats.powerPlayGoals}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>PowerPlay Points</td>\n                                        <td>{playerStats.powerPlayPoints}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Short-handed Goals</td>\n                                        <td>{playerStats.shortHandedGoals}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Short-handed Points</td>\n                                        <td>{playerStats.shortHandedPoints}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Game Winning Goals</td>\n                                        <td>{playerStats.gameWinningGoals}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Overtime Goals</td>\n                                        <td>{playerStats.overTimeGoals}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Shots</td>\n                                        <td>{playerStats.shots}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Shot %</td>\n                                        <td>{playerStats.shotPct}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Faceoff %</td>\n                                        <td>{playerStats.faceOffPct}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Average TOI</td>\n                                        <td>{playerStats.timeOnIcePerGame}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Even-strength TOI</td>\n                                        <td>{playerStats.evenTimeOnIcePerGame}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Short-handed TOI</td>\n                                        <td>{playerStats.shortHandedTimeOnIcePerGame}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>PowerPlay TOI</td>\n                                        <td>{playerStats.powerPlayTimeOnIcePerGame}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        )}\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nexport default PlayerStats;","import React, { Component } from 'react';\nimport '../App.js';\n\nclass TeamOverview extends Component {\n    state = {\n        error: false,\n      };\n\n    render() {\n        const team = this.props.team;\n        const stats = this.props.team.teamStats[0].splits[0].stat;\n        return (\n            <div className=\"player-info\" key={team.name}>\n                \n                    <div className=\"player-inner\">\n                        <div className=\"info\">\n                            <h3>{team.name}</h3>\n                            <ul>\n                                <li>{team.venue.name}, {team.venue.city}</li>\n                                <li>{team.conference.name} Conference</li>\n                                <li>{team.division.name} Division</li>\n                            </ul>\n                        </div>\n                        <div className=\"player-stats\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>Power Play Percentage</td>\n                                        <td>{stats.powerPlayPercentage}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Penalty Kill Percentage</td>\n                                        <td>{stats.penaltyKillPercentage}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Faceoff Win Percentage</td>\n                                        <td>{stats.faceOffWinPercentage}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Games Played</td>\n                                        <td>{stats.gamesPlayed}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Wins</td>\n                                        <td>{stats.wins}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Losses</td>\n                                        <td>{stats.losses}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>OT Losses</td>\n                                        <td>{stats.losses}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Points</td>\n                                        <td>{stats.pts}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Goals Against Per Game</td>\n                                        <td>{stats.goalsAgainstPerGame}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Goals Per Game</td>\n                                        <td>{stats.goalsPerGame}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Shots Per Game</td>\n                                        <td>{stats.shotsPerGame}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Shooting Percentage</td>\n                                        <td>{stats.shootingPctg}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Shots Allowed</td>\n                                        <td>{stats.shotsAllowed}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Power Play Opportunities</td>\n                                        <td>{stats.powerPlayOpportunities}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Save Percentage</td>\n                                        <td>{stats.savePctg}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                \n\n            </div>\n        )\n    }\n}\n\nexport default TeamOverview;","import React, { Component } from 'react';\nimport '../App.js';\n\nclass TeamRoster extends Component {\n    render() {\n        const roster = this.props.roster;\n        return (\n            <div className='team-roster'>\n                    <div className=\"stat-window\">\n                    <div className=\"vertical\">Roster</div>\n                        <table className=\"players-table\">\n                            <thead>\n                                <tr>\n                                    <th colSpan=\"3\">Team Roster</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {roster.map(player => (\n                                    <tr \n                                        key={player.person.id} \n                                        className={player.person.id === this.props.selectedPlayer ? 'active' : 'player-row'} \n                                        onClick={() => this.props.handlePlayer(player.person.id)}\n                                        >\n                                            <td>{player.jerseyNumber}</td>\n                                            <td>{player.person.fullName}</td>\n                                            <td>{player.position.abbreviation}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default TeamRoster;","import React, { Component } from 'react';\nimport sort from 'fast-sort';\nimport { Route, withRouter, Link } from 'react-router-dom';\nimport PlayerStats from './PlayerStats';\nimport TeamOverview from './TeamOverview';\nimport TeamRoster from './TeamRoster';\nimport '../App.js';\n\nclass TeamStats extends Component {\n    state = {\n        selectedPlayer: null,\n        change: false\n    }\n    handlePlayer = (playerid) => {\n        this.setState({selectedPlayer:playerid});\n        this.props.pullPlayerInfo(playerid);\n        this.props.pullPlayerStats(playerid);\n        this.setState({change:true})\n        this.props.history.push('/teams/' + this.props.id + '/player/' + playerid)\n    }\n    render() {\n        \n        const team = this.props.teams[this.props.id];\n        let roster = team.roster.roster;\n        // Sort team roster\n        sort(roster).by([\n            { desc: t => t.position.type },\n            { asc: n => n.person.fullName.substring(n.person.fullName.indexOf(' ')+1) }\n        ]);\n        let count = 0;\n        // Count goalies, then shift/push to end of array\n        roster.forEach(player => {\n            if (player.position.type === \"Goalie\") {\n                count++;\n            }\n        });\n        for (let i = 0; i < count; i++) {\n            roster.push(roster.shift());\n        }\n        count = 0;\n        return (\n            <div>\n                {team ? (\n                    <div className=\"stats\">\n                        <div className=\"logo-container\">\n                            <img src={require(`../img/${team.abbreviation}.svg`)} alt={team.name} className=\"team-logo-stats\" />\n                            <h1><Link to={`/teams/${team.id}`}>{team.name}</Link></h1>\n                        </div>\n\n                        <TeamRoster \n                            roster={roster}\n                            handlePlayer={this.handlePlayer}\n                            pullPlayerInfo={this.props.pullPlayerInfo}\n                            pullPlayerStats={this.props.pullPlayerStats}\n                            selectedPlayer={this.state.selectedPlayer}\n                            windowWidth={this.props.windowWidth}\n                        />\n                        <Route\n                  path=\"/teams/:id/player/:pid\"\n                  render={props => (\n                            <PlayerStats\n                            playerStats={this.props.playerStats}\n                            playerInfo={this.props.playerInfo}\n                            \n                            />\n                            )}\n                            />\n                        <Route exact path=\"/teams/:id\"\n                        render={props => (\n                            <TeamOverview \n                                team={team}\n                            />\n                        )}\n                    />\n                            \n                    </div>\n                    \n\n                ) : (<p>Loading...</p>)}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TeamStats);","import React, { Component } from 'react';\nimport '../App.css';\n\nclass StandingsTable extends Component {\n    render() {\n        return (\n            <table className=\"standings-table\">\n                <thead>\n                    <tr>\n                        <th className=\"div-name\">{this.props.division}</th>\n                        <th>GP</th>\n                        <th>W</th>\n                        <th>L</th>\n                        <th>OT</th>\n                        <th>PTS</th>\n                        <th className=\"hide\">ROW</th>\n                        <th className=\"hide\">GF</th>\n                        <th className=\"hide\">GA</th>\n                        <th className=\"hide\">DIFF</th>\n                        <th className=\"hide\">Streak</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.standings.map(currentTeam => (\n                        <tr key={currentTeam.team.id}>\n                            <td>{currentTeam.team.name}</td>\n                            <td>{currentTeam.gamesPlayed}</td>\n                            <td>{currentTeam.leagueRecord.wins}</td>\n                            <td>{currentTeam.leagueRecord.losses}</td>\n                            <td>{currentTeam.leagueRecord.ot}</td>\n                            <td>{currentTeam.points}</td>\n                            <td className=\"hide\">{currentTeam.row}</td>\n                            <td className=\"hide\">{currentTeam.goalsScored}</td>\n                            <td className=\"hide\">{currentTeam.goalsAgainst}</td>\n                            <td className={(currentTeam.goalsScored - currentTeam.goalsAgainst) > 0 ? (\"diff-positive hide\") : (\"diff-negative hide\")}>{(currentTeam.goalsScored - currentTeam.goalsAgainst) > 0 && (\"+\")}{currentTeam.goalsScored - currentTeam.goalsAgainst}</td>\n                            <td className=\"hide\">{currentTeam.streak ? currentTeam.streak.streakCode : \"--\"}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default StandingsTable;","import React, { Component } from 'react';\nimport StandingsTable from '../components/StandingsTable';\nimport '../App.css';\n\nclass Standings extends Component {\n    render() {\n        return (\n            <div className=\"standings\">\n                    <div className=\"standings-inner\">\n                        <h2 className=\"conf-heading\">Eastern Conference</h2>\n                        <StandingsTable\n                            standings={this.props.metro}\n                            division=\"Metropolitan\"\n                        />\n                        <StandingsTable\n                            standings={this.props.atlantic}\n                            division=\"Atlantic\"\n                        />\n\n                        <StandingsTable\n                            standings={this.props.easternWildCard}\n                            division=\"Wild Card\"\n                        />\n\n                        <h2 className=\"conf-heading\">Western Conference</h2>\n                        <StandingsTable\n                            standings={this.props.central}\n                            division=\"Central\"\n                        />\n                        <StandingsTable\n                            standings={this.props.pacific}\n                            division=\"Pacific\"\n                        />\n\n                        <StandingsTable\n                            standings={this.props.westernWildCard}\n                            division=\"Wild Card\"\n                        />\n                    </div>\n            \n            </div>\n        \n    \n        )}}\n\nexport default Standings;","import React, { Component } from 'react';\nimport Teams from './components/Teams';\nimport TeamStats from './components/TeamStats';\nimport Standings from './components/Standings';\nimport { Route, withRouter } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    dropdownOptions: [],\n    playerStats: [],\n    playerInfo: [],\n    teams: [],\n    metro: [],\n    atlantic: [],\n    central: [],\n    pacific: [],\n    easternWildCard: [],\n    westernWildCard: [],\n    error: false,\n    windowWidth: 1000\n  };\n\n  componentDidMount = () => {\n    this.pullTeams();\n    this.pullStandings();\n  };\n\n  pullTeams = () => {\n    fetch(\n      'https://statsapi.web.nhl.com/api/v1/teams?expand=team.roster&expand=team.schedule.next&expand=team.schedule.previous&expand=team.stats'\n    )\n      .then(response => response.json())\n      .then(data => {\n        let newTeams = data.teams;\n        let dropdownOptions = [];\n        for (let i = 0; i < newTeams.length; i++) {\n          newTeams[i].id = i;\n          dropdownOptions.push({\n            value: newTeams[i].id,\n            label: <div><img src={require(`./img/${newTeams[i].abbreviation}.svg`)} className=\"team-logo\" alt={newTeams[i].name}/> {newTeams[i].name}</div>,\n            image: {avatar: true, src: 'img/' + newTeams[i].abbreviation + '.svg'}\n          })\n        }\n        this.setState({teams:newTeams});\n        this.setState({dropdownOptions:dropdownOptions})\n      })\n      .catch(err => console.log(err));\n  };\n\n  pullStandings = () => {\n    fetch('https://statsapi.web.nhl.com/api/v1/standings?expand=standings.record')\n    .then(response => response.json())\n    .then(data => {\n      let metro = [];\n      let atlantic = [];\n      let central = [];\n      let pacific = [];\n      let easternWildCard = [];\n      let westernWildCard = [];\n      data.records.forEach(division => {\n        division.teamRecords.forEach(team => {\n          if (division.conference.name === \"Eastern\" && team.wildCardRank > 0) {\n            easternWildCard.push(team)\n          }\n        })\n        division.teamRecords.forEach(team => {\n          if (division.conference.name === \"Western\" && team.wildCardRank > 0) {\n            westernWildCard.push(team);\n          }\n        })\n        division.teamRecords.forEach(team => {\n          if (team.divisionRank <= 3 && division.division.abbreviation === \"M\") {\n            metro.push(team);\n          } else if (team.divisionRank <= 3 && division.division.abbreviation === \"A\") {\n            atlantic.push(team);\n          } else if (team.divisionRank <= 3 && division.division.abbreviation === \"C\") {\n            central.push(team);\n          } else if (team.divisionRank <= 3 && division.division.abbreviation === \"P\") {\n            pacific.push(team);\n          }\n        })\n      })\n      this.setState({\n        easternWildCard:easternWildCard, \n        westernWildCard:westernWildCard,\n        metro:metro,\n        atlantic:atlantic,\n        central:central,\n        pacific:pacific\n      })\n      }\n      )\n    .catch(err => console.log(err))\n  }\n\n  pullPlayerInfo = (playerid) => {\n    this.forceUpdate();\n    fetch(\n        'https://statsapi.web.nhl.com/api/v1/people/' + playerid\n    )\n    .then(response => response.json())\n    .then(data => {\n    this.setState({playerInfo:data.people[0]});\n    })\n    .catch(err => console.log(err));\n  };\n\n  pullPlayerStats = (playerid) => {\n      fetch(\n          'https://statsapi.web.nhl.com/api/v1/people/' + playerid + '/stats?stats=statsSingleSeason'\n      )\n      .then(response => response.json())\n      .then(data => {\n        if (data.stats[0].splits.length >= 1) {\n          this.setState({playerStats:data.stats[0].splits[0].stat})\n        }\n      })\n  }\n\n  filterTeams = division => {\n    return this.state.teams.filter(\n      fteam => fteam.division.abbreviation === division\n    );\n  };\n\n  handleTeam = selectedTeam => {\n    this.setState({ selectedTeam});\n    this.props.history.push('/teams/' + selectedTeam.value);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" />\n        <div>\n          {this.state.teams.length > 0 ? (\n            <div className=\"nhl-container\">\n              <nav>\n                \n                  <Teams \n                    teams={this.state.teams}\n                    dropdownOptions={this.state.dropdownOptions}\n                    handleTeam={this.handleTeam}\n                  />\n                \n              </nav>\n              <main>\n                <Route\n                  path=\"/teams/:id\"\n                  render={props => (\n                    <TeamStats\n                      teams={this.state.teams}\n                      playerStats={this.state.playerStats}\n                      playerInfo={this.state.playerInfo}\n                      pullPlayerInfo={this.pullPlayerInfo}\n                      pullPlayerStats={this.pullPlayerStats}\n                      id={props.match.params.id}\n                    />\n                  )}\n                />\n                <Route\n                  exact path=\"/\"\n                  render={() => (\n                    <Standings \n                      easternWildCard={this.state.easternWildCard}\n                      westernWildCard={this.state.westernWildCard}\n                      metro={this.state.metro}\n                      atlantic={this.state.atlantic}\n                      central={this.state.central}\n                      pacific={this.state.pacific}\n                    />\n                  )}\n                />\n              </main>\n            </div>\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}